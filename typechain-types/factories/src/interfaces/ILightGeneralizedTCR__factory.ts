/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ILightGeneralizedTCR,
  ILightGeneralizedTCRInterface,
} from "../../../src/interfaces/ILightGeneralizedTCR";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_item",
        type: "string",
      },
    ],
    name: "addItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "arbitratorExtraData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "challengePeriodDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_itemID",
        type: "bytes32",
      },
    ],
    name: "executeRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_itemID",
        type: "bytes32",
      },
    ],
    name: "getItemInfo",
    outputs: [
      {
        internalType: "uint8",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "numberOfRequests",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sumDeposit",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "submissionBaseDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ILightGeneralizedTCR__factory {
  static readonly abi = _abi;
  static createInterface(): ILightGeneralizedTCRInterface {
    return new utils.Interface(_abi) as ILightGeneralizedTCRInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILightGeneralizedTCR {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ILightGeneralizedTCR;
  }
}
