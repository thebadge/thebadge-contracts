/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { TheBadge, TheBadgeInterface } from "../../src/TheBadge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "TheBadge__ERC1155_notAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__constructor_paramAddressesCanNotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__createBadgeType_controllerIsPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__createBadgeType_invalidController",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__createBadgeType_invalidMintCost",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__createBadgeType_notAnEmitter",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__createBadgeType_wrongValue",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__onlyAdmin_senderIsNotAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__onlyController_senderIsNotTheController",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__onlyEmitter_senderIsNotAnEmitter",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__registerEmitter_alreadyRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__registerEmitter_invalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__registerEmitter_wrongValue",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__requestBadge_badgeTypeNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__requestBadge_controllerIsPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__requestBadge_isPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__requestBadge_wrongValue",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__setBadgeTypeController_alreadySet",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__setBadgeTypeController_emptyName",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__setBadgeTypeController_notFound",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__setControllerStatus_notFound",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__updateAddresses_paramAddressesCanNotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__updateBadgeStatus_notCreated",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__updateBadgeTypeFee_badgeTypeNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__updateBadgeType_badgeTypeNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__updateBadgeType_invalidMintCost",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__updateBadgeType_notBadgeTypeOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TheBadge__updateEmitter_notFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "badgeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "badgeOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum BadgeStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "BadgeStatusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "badgeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    name: "BadgeTypeCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "emitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    name: "EmitterRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "emitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    name: "EmitterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "badge",
    outputs: [
      {
        internalType: "enum BadgeStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "dueDate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "badgeIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256",
      },
    ],
    name: "badgeRequestValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "badgeType",
    outputs: [
      {
        internalType: "address",
        name: "emitter",
        type: "address",
      },
      {
        internalType: "string",
        name: "controllerName",
        type: "string",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "mintCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mintFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "validFor",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "badgeTypeController",
    outputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collectFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "string",
            name: "controllerName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "mintCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "mintFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "validFor",
            type: "uint256",
          },
        ],
        internalType: "struct TheBadge.CreateBadgeType",
        name: "args",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "createBadgeType",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "createBadgeTypeValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "emitters",
    outputs: [
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minBadgeMintValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintBadgeDefaultFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_emitter",
        type: "address",
      },
      {
        internalType: "string",
        name: "_metadata",
        type: "string",
      },
    ],
    name: "registerEmitter",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "registerEmitterValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "requestBadge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
    ],
    name: "setBadgeTypeController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isPaused",
        type: "bool",
      },
    ],
    name: "setControllerStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
    ],
    name: "updateAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "badgeOwner",
        type: "address",
      },
      {
        internalType: "enum BadgeStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "updateBadgeStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mintCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "validFor",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "updateBadgeType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "updateBadgeTypeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_emitter",
        type: "address",
      },
      {
        internalType: "string",
        name: "_metadata",
        type: "string",
      },
    ],
    name: "updateEmitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintBadgeDefaultFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minBadgeMintValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_createBadgeTypeValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_registerEmitterValue",
        type: "uint256",
      },
    ],
    name: "updateValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "";

type TheBadgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TheBadgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TheBadge__factory extends ContractFactory {
  constructor(...args: TheBadgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _admin: PromiseOrValue<string>,
    _feeCollector: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TheBadge> {
    return super.deploy(
      _admin,
      _feeCollector,
      overrides || {}
    ) as Promise<TheBadge>;
  }
  override getDeployTransaction(
    _admin: PromiseOrValue<string>,
    _feeCollector: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_admin, _feeCollector, overrides || {});
  }
  override attach(address: string): TheBadge {
    return super.attach(address) as TheBadge;
  }
  override connect(signer: Signer): TheBadge__factory {
    return super.connect(signer) as TheBadge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheBadgeInterface {
    return new utils.Interface(_abi) as TheBadgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheBadge {
    return new Contract(address, _abi, signerOrProvider) as TheBadge;
  }
}
