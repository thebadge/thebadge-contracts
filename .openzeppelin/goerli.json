{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x75f3B34B3d31A03595c63D9DAd505B6F8f5EcFC9",
    "txHash": "0x1504d50ec6119edffe28e923c51dfcd23188bf22e588e2efe56ef14349d8560d"
  },
  "proxies": [
    {
      "address": "0x641dDCeDe396fA1C2B1AF323523508D2f8fd6825",
      "txHash": "0x5bdcee452745cd5cbac6cb0f5b4c9b705de02c1f9106b951a9d6de9a6ea3a420",
      "kind": "uups"
    },
    {
      "address": "0x6269Ae4D1Afae6bC88FF6Fbf09137deecB6799c7",
      "txHash": "0xe977c9463bed8e65c65168a2242c2f7494192928c34dab36e4d625ee7515dbe3",
      "kind": "transparent"
    },
    {
      "address": "0x1ED916fa8153ed4e410189366719CF837e3eC03a",
      "txHash": "0xd1794bfa6ec58b2a48bb456d0dce40741d49d2e782e48b1af527e7447ae7f66b",
      "kind": "uups"
    },
    {
      "address": "0x35bC888317AEbDd4676Fd8f8A258097789B71c0C",
      "txHash": "0x0aa1106793d07da3beb66a282c3d27cdcb32d7125e432df3573a2793270a4b7b",
      "kind": "uups"
    },
    {
      "address": "0x31647d1E9E122Da74295bd3e9759d34E7711c144",
      "txHash": "0xba1b702a63eba89343a09c10046de1218d16255de28ca41801b083beed72e104",
      "kind": "transparent"
    }
  ],
  "impls": {
    "ea5d4671543e304c4ed915962e5409f5691270b14b4bff22fe0b6b6c1389d1de": {
      "address": "0xb2EA3f608d87c2Ba30E0E132Ea74Fb0b4ea1A895",
      "txHash": "0x65165cc49c35bd19206a0843bd82a4fd2793bde89a35023b1f17032711f80517",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "badgeModelIds",
            "offset": 0,
            "slot": "401",
            "type": "t_struct(Counter)3098_storage",
            "contract": "TheBadgeLogic",
            "src": "src/TheBadgeLogic.sol:11"
          },
          {
            "label": "registerCreatorValue",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "TheBadgeLogic",
            "src": "src/TheBadgeLogic.sol:12"
          },
          {
            "label": "mintBadgeDefaultFee",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "TheBadgeLogic",
            "src": "src/TheBadgeLogic.sol:13"
          },
          {
            "label": "createBadgeModelValue",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "TheBadgeLogic",
            "src": "src/TheBadgeLogic.sol:18"
          },
          {
            "label": "feeCollector",
            "offset": 0,
            "slot": "405",
            "type": "t_address",
            "contract": "TheBadgeLogic",
            "src": "src/TheBadgeLogic.sol:19"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "406",
            "type": "t_mapping(t_address,t_struct(Creator)5413_storage)",
            "contract": "TheBadgeLogic",
            "src": "src/TheBadgeLogic.sol:78"
          },
          {
            "label": "badgeModelController",
            "offset": 0,
            "slot": "407",
            "type": "t_mapping(t_string_memory_ptr,t_struct(BadgeModelController)5418_storage)",
            "contract": "TheBadgeLogic",
            "src": "src/TheBadgeLogic.sol:79"
          },
          {
            "label": "badgeModel",
            "offset": 0,
            "slot": "408",
            "type": "t_mapping(t_uint256,t_struct(BadgeModel)5440_storage)",
            "contract": "TheBadgeLogic",
            "src": "src/TheBadgeLogic.sol:80"
          },
          {
            "label": "badge",
            "offset": 0,
            "slot": "409",
            "type": "t_mapping(t_uint256,t_struct(Badge)5447_storage)",
            "contract": "TheBadgeLogic",
            "src": "src/TheBadgeLogic.sol:81"
          },
          {
            "label": "badgeModelsByAccount",
            "offset": 0,
            "slot": "410",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "contract": "TheBadgeLogic",
            "src": "src/TheBadgeLogic.sol:82"
          },
          {
            "label": "badgeIds",
            "offset": 0,
            "slot": "411",
            "type": "t_struct(Counter)3098_storage",
            "contract": "TheBadge",
            "src": "src/TheBadge.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Creator)5413_storage)": {
            "label": "mapping(address => struct TheBadgeLogic.Creator)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(BadgeModelController)5418_storage)": {
            "label": "mapping(string => struct TheBadgeLogic.BadgeModelController)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(uint256 => mapping(address => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Badge)5447_storage)": {
            "label": "mapping(uint256 => struct TheBadgeLogic.Badge)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BadgeModel)5440_storage)": {
            "label": "mapping(uint256 => struct TheBadgeLogic.BadgeModel)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Badge)5447_storage": {
            "label": "struct TheBadgeLogic.Badge",
            "members": [
              {
                "label": "badgeModelId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "dueDate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(BadgeModel)5440_storage": {
            "label": "struct TheBadgeLogic.BadgeModel",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "controllerName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mintCreatorFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "validFor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "mintProtocolFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(BadgeModelController)5418_storage": {
            "label": "struct TheBadgeLogic.BadgeModelController",
            "members": [
              {
                "label": "controller",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "paused",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3098_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Creator)5413_storage": {
            "label": "struct TheBadgeLogic.Creator",
            "members": [
              {
                "label": "metadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4d4bd723fa377eb15059fefe39f9515b0cb9127f913984723430af4981a3d6fe": {
      "address": "0xaf71C3CEC6F2302EC43884251838A1021c3027F1",
      "txHash": "0x0940b3e1a7baf318f33f5cc49f495c27e7c9304b7a79db8031762bd354ac6f61",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "theBadge",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(TheBadge)5388",
            "contract": "KlerosController",
            "src": "src/badgeModelControllers/kleros.sol:14"
          },
          {
            "label": "arbitrator",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IArbitrator)4441",
            "contract": "KlerosController",
            "src": "src/badgeModelControllers/kleros.sol:15"
          },
          {
            "label": "tcrFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "KlerosController",
            "src": "src/badgeModelControllers/kleros.sol:16"
          },
          {
            "label": "klerosBadgeModel",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(KlerosBadgeModel)6251_storage)",
            "contract": "KlerosController",
            "src": "src/badgeModelControllers/kleros.sol:81"
          },
          {
            "label": "klerosBadge",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(KlerosBadge)6258_storage)",
            "contract": "KlerosController",
            "src": "src/badgeModelControllers/kleros.sol:82"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArbitrator)4441": {
            "label": "contract IArbitrator",
            "numberOfBytes": "20"
          },
          "t_contract(TheBadge)5388": {
            "label": "contract TheBadge",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_struct(KlerosBadge)6258_storage)": {
            "label": "mapping(uint256 => struct KlerosController.KlerosBadge)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(KlerosBadgeModel)6251_storage)": {
            "label": "mapping(uint256 => struct KlerosController.KlerosBadgeModel)",
            "numberOfBytes": "32"
          },
          "t_struct(KlerosBadge)6258_storage": {
            "label": "struct KlerosController.KlerosBadge",
            "members": [
              {
                "label": "itemID",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "callee",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "deposit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(KlerosBadgeModel)6251_storage": {
            "label": "struct KlerosController.KlerosBadgeModel",
            "members": [
              {
                "label": "tcrList",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
