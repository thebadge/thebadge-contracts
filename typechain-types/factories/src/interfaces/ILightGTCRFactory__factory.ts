/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ILightGTCRFactory,
  ILightGTCRFactoryInterface,
} from "../../../src/interfaces/ILightGTCRFactory";

const _abi = [
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IArbitrator",
        name: "_arbitrator",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_arbitratorExtraData",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_connectedTCR",
        type: "address",
      },
      {
        internalType: "string",
        name: "_registrationMetaEvidence",
        type: "string",
      },
      {
        internalType: "string",
        name: "_clearingMetaEvidence",
        type: "string",
      },
      {
        internalType: "address",
        name: "_governor",
        type: "address",
      },
      {
        internalType: "uint256[4]",
        name: "_baseDeposits",
        type: "uint256[4]",
      },
      {
        internalType: "uint256",
        name: "_challengePeriodDuration",
        type: "uint256",
      },
      {
        internalType: "uint256[3]",
        name: "_stakeMultipliers",
        type: "uint256[3]",
      },
      {
        internalType: "address",
        name: "_relayContract",
        type: "address",
      },
    ],
    name: "deploy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "instances",
    outputs: [
      {
        internalType: "contract ILightGeneralizedTCR",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ILightGTCRFactory__factory {
  static readonly abi = _abi;
  static createInterface(): ILightGTCRFactoryInterface {
    return new utils.Interface(_abi) as ILightGTCRFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILightGTCRFactory {
    return new Contract(address, _abi, signerOrProvider) as ILightGTCRFactory;
  }
}
