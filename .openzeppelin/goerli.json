{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x55D8B001C079a9156874e785ab42558082b8eBbb",
    "txHash": "0xee919a77b7dffcfc75eba7dc0221e7106be6d5267da498fdd511be903842b4ff"
  },
  "proxies": [
    {
      "address": "0x384e3aEe09dA900Ac49f04cFD36bD9620B9DD30d",
      "txHash": "0xb649cf43a14d2f9f4a997380873a8657d97e36794cd1a32238cf6da2e9491cfc",
      "kind": "transparent"
    },
    {
      "address": "0x891eDD9c05361b1E546Ca09fDed43d8Ab1d59BE0",
      "txHash": "0x85ed1582ec84bde3e1fb14e44de517ece17515aa02906b6582c04c1a3a65e957",
      "kind": "transparent"
    },
    {
      "address": "0x894E7c4F2F701FAb88e9B2723a65E15832350B43",
      "txHash": "0xf9f9f30e1c3641a288d161b7e7d625df47cf78ab6b70b1682581c473e44feb22",
      "kind": "transparent"
    }
  ],
  "impls": {
    "dec8186e64da8beae57be83597ac57a60b3227c62cc38292101b5423c85efedd": {
      "address": "0x4B37Af6A0190670419dF181110525F2e06E7B573",
      "txHash": "0x7deda352a8cf268f9519af5cc87be5aa549430d50f24271d1f074a3fa0af5b30",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "TheBadge",
            "src": "src/TheBadge.sol:11"
          },
          {
            "label": "badgeIds",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "TheBadge",
            "src": "src/TheBadge.sol:12"
          },
          {
            "label": "registerEmitterValue",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "TheBadge",
            "src": "src/TheBadge.sol:13"
          },
          {
            "label": "mintBadgeDefaultFee",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "TheBadge",
            "src": "src/TheBadge.sol:14"
          },
          {
            "label": "minBadgeMintValue",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "TheBadge",
            "src": "src/TheBadge.sol:15"
          },
          {
            "label": "createBadgeTypeValue",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "TheBadge",
            "src": "src/TheBadge.sol:16"
          },
          {
            "label": "feeCollector",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "TheBadge",
            "src": "src/TheBadge.sol:17"
          },
          {
            "label": "emitters",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_struct(Emitter)3151_storage)",
            "contract": "TheBadge",
            "src": "src/TheBadge.sol:91"
          },
          {
            "label": "badgeTypeController",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_string_memory_ptr,t_struct(BadgeTypeController)3156_storage)",
            "contract": "TheBadge",
            "src": "src/TheBadge.sol:95"
          },
          {
            "label": "badgeType",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_uint256,t_struct(BadgeType)3180_storage)",
            "contract": "TheBadge",
            "src": "src/TheBadge.sol:100"
          },
          {
            "label": "badge",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Badge)3186_storage))",
            "contract": "TheBadge",
            "src": "src/TheBadge.sol:106"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(BadgeStatus)4449": {
            "label": "enum BadgeStatus",
            "members": [
              "NotCreated",
              "InReview",
              "Approved",
              "Rejected",
              "Revoked"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Badge)3186_storage)": {
            "label": "mapping(address => struct TheBadge.Badge)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Emitter)3151_storage)": {
            "label": "mapping(address => struct TheBadge.Emitter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(BadgeTypeController)3156_storage)": {
            "label": "mapping(string => struct TheBadge.BadgeTypeController)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Badge)3186_storage))": {
            "label": "mapping(uint256 => mapping(address => struct TheBadge.Badge))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BadgeType)3180_storage)": {
            "label": "mapping(uint256 => struct TheBadge.BadgeType)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Badge)3186_storage": {
            "label": "struct TheBadge.Badge",
            "members": [
              {
                "label": "status",
                "type": "t_enum(BadgeStatus)4449",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dueDate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(BadgeType)3180_storage": {
            "label": "struct TheBadge.BadgeType",
            "members": [
              {
                "label": "emitter",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "controllerName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mintCost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "mintFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "validFor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(BadgeTypeController)3156_storage": {
            "label": "struct TheBadge.BadgeTypeController",
            "members": [
              {
                "label": "controller",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "paused",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Emitter)3151_storage": {
            "label": "struct TheBadge.Emitter",
            "members": [
              {
                "label": "metadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fbb8e9de7dabb859ebb6cde1a06f235297dcf541a369cef69215901f22bebe8f": {
      "address": "0x1B0750E7fA34E1Db0de677859a2d166f62102458",
      "txHash": "0xed54236ceda761cd7cac5d6125c5e3a34fafbe52c1b7ce9599d9d0c5d6974b92",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "theBadge",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(ITheBadge)5324",
            "contract": "KlerosBadgeTypeController",
            "src": "src/badgeTypeControllers/kleros.sol:15"
          },
          {
            "label": "arbitrator",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IArbitrator)118",
            "contract": "KlerosBadgeTypeController",
            "src": "src/badgeTypeControllers/kleros.sol:16"
          },
          {
            "label": "tcrFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "KlerosBadgeTypeController",
            "src": "src/badgeTypeControllers/kleros.sol:17"
          },
          {
            "label": "klerosBadgeType",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(KlerosBadgeType)4567_storage)",
            "contract": "KlerosBadgeTypeController",
            "src": "src/badgeTypeControllers/kleros.sol:88"
          },
          {
            "label": "klerosBadge",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(KlerosBadge)4574_storage))",
            "contract": "KlerosBadgeTypeController",
            "src": "src/badgeTypeControllers/kleros.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArbitrator)118": {
            "label": "contract IArbitrator",
            "numberOfBytes": "20"
          },
          "t_contract(ITheBadge)5324": {
            "label": "contract ITheBadge",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(KlerosBadge)4574_storage)": {
            "label": "mapping(address => struct KlerosBadgeTypeController.KlerosBadge)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(KlerosBadge)4574_storage))": {
            "label": "mapping(uint256 => mapping(address => struct KlerosBadgeTypeController.KlerosBadge))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(KlerosBadgeType)4567_storage)": {
            "label": "mapping(uint256 => struct KlerosBadgeTypeController.KlerosBadgeType)",
            "numberOfBytes": "32"
          },
          "t_struct(KlerosBadge)4574_storage": {
            "label": "struct KlerosBadgeTypeController.KlerosBadge",
            "members": [
              {
                "label": "itemID",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "callee",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "deposit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(KlerosBadgeType)4567_storage": {
            "label": "struct KlerosBadgeTypeController.KlerosBadgeType",
            "members": [
              {
                "label": "tcrList",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
