{
  "_format": "",
  "paths": {
    "artifacts": "out",
    "build_infos": "out/build-info",
    "sources": "src",
    "tests": "test",
    "scripts": "script",
    "libraries": ["lib"]
  },
  "files": {
    "lib/erc-792/contracts/IArbitrable.sol": {
      "lastModificationDate": 1707395377186,
      "contentHash": "d1a29994bdcffed284665799f03987a9",
      "sourceName": "lib/erc-792/contracts/IArbitrable.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": ["lib/erc-792/contracts/IArbitrable.sol", "lib/erc-792/contracts/IArbitrator.sol"],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IArbitrable": {
          "0.8.20": { "path": "IArbitrable.sol/IArbitrable.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "lib/erc-792/contracts/IArbitrator.sol": {
      "lastModificationDate": 1707395377186,
      "contentHash": "77a0178e0f7e511634c8622214f204f2",
      "sourceName": "lib/erc-792/contracts/IArbitrator.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": ["lib/erc-792/contracts/IArbitrable.sol", "lib/erc-792/contracts/IArbitrator.sol"],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IArbitrator": {
          "0.8.20": { "path": "IArbitrator.sol/IArbitrator.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "lib/erc-792/contracts/erc-1497/IEvidence.sol": {
      "lastModificationDate": 1707395377186,
      "contentHash": "45ca33b3d8d762f1e1439a57c5dcb2c1",
      "sourceName": "lib/erc-792/contracts/erc-1497/IEvidence.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": ["lib/erc-792/contracts/IArbitrable.sol", "lib/erc-792/contracts/IArbitrator.sol"],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IEvidence": {
          "0.8.20": { "path": "IEvidence.sol/IEvidence.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "lib/forge-std/lib/ds-test/src/test.sol": {
      "lastModificationDate": 1707395378078,
      "contentHash": "9febff9d09f18af5306669dc276c4c43",
      "sourceName": "lib/forge-std/lib/ds-test/src/test.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "DSTest": { "0.8.20": { "path": "test.sol/DSTest.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" } }
      },
      "seenByCompiler": true
    },
    "lib/forge-std/src/Base.sol": {
      "lastModificationDate": 1707395377206,
      "contentHash": "ee13c050b1914464f1d3f90cde90204b",
      "sourceName": "lib/forge-std/src/Base.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": ["lib/forge-std/src/StdStorage.sol", "lib/forge-std/src/Vm.sol"],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "CommonBase": {
          "0.8.20": { "path": "Base.sol/CommonBase.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        },
        "ScriptBase": {
          "0.8.20": { "path": "Base.sol/ScriptBase.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        },
        "TestBase": { "0.8.20": { "path": "Base.sol/TestBase.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" } }
      },
      "seenByCompiler": true
    },
    "lib/forge-std/src/StdAssertions.sol": {
      "lastModificationDate": 1707395377206,
      "contentHash": "6cc2858240bcd443debbbf075490e325",
      "sourceName": "lib/forge-std/src/StdAssertions.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": ["lib/forge-std/lib/ds-test/src/test.sol", "lib/forge-std/src/StdMath.sol"],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdAssertions": {
          "0.8.20": { "path": "StdAssertions.sol/StdAssertions.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "lib/forge-std/src/StdChains.sol": {
      "lastModificationDate": 1707395377206,
      "contentHash": "b0324b2e5a11948f852032aa293b3a05",
      "sourceName": "lib/forge-std/src/StdChains.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": ["lib/forge-std/src/Vm.sol"],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdChains": {
          "0.8.20": { "path": "StdChains.sol/StdChains.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "lib/forge-std/src/StdCheats.sol": {
      "lastModificationDate": 1707395377206,
      "contentHash": "d984e2c76dae07bac1e292af2a5d4fd1",
      "sourceName": "lib/forge-std/src/StdCheats.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": ["lib/forge-std/src/StdStorage.sol", "lib/forge-std/src/Vm.sol", "lib/forge-std/src/console2.sol"],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdCheats": {
          "0.8.20": { "path": "StdCheats.sol/StdCheats.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        },
        "StdCheatsSafe": {
          "0.8.20": { "path": "StdCheats.sol/StdCheatsSafe.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "lib/forge-std/src/StdError.sol": {
      "lastModificationDate": 1707395377206,
      "contentHash": "64c896e1276a291776e5ea5aecb3870a",
      "sourceName": "lib/forge-std/src/StdError.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdError": {
          "0.8.20": { "path": "StdError.sol/stdError.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "lib/forge-std/src/StdInvariant.sol": {
      "lastModificationDate": 1707395377206,
      "contentHash": "0a580d6fac69e9d4b6504f747f3c0c24",
      "sourceName": "lib/forge-std/src/StdInvariant.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdInvariant": {
          "0.8.20": { "path": "StdInvariant.sol/StdInvariant.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "lib/forge-std/src/StdJson.sol": {
      "lastModificationDate": 1707395377206,
      "contentHash": "a341308627b7eeab7589534daad58186",
      "sourceName": "lib/forge-std/src/StdJson.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": ["lib/forge-std/src/Vm.sol"],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "stdJson": { "0.8.20": { "path": "StdJson.sol/stdJson.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" } }
      },
      "seenByCompiler": true
    },
    "lib/forge-std/src/StdMath.sol": {
      "lastModificationDate": 1707395377206,
      "contentHash": "9da8f453eba6bb98f3d75bc6822bfb29",
      "sourceName": "lib/forge-std/src/StdMath.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdMath": { "0.8.20": { "path": "StdMath.sol/stdMath.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" } }
      },
      "seenByCompiler": true
    },
    "lib/forge-std/src/StdStorage.sol": {
      "lastModificationDate": 1707395377206,
      "contentHash": "abd6f3379e6e2a7979b18abc21aea0c1",
      "sourceName": "lib/forge-std/src/StdStorage.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": ["lib/forge-std/src/Vm.sol"],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdStorage": {
          "0.8.20": { "path": "StdStorage.sol/stdStorage.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        },
        "stdStorageSafe": {
          "0.8.20": { "path": "StdStorage.sol/stdStorageSafe.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "lib/forge-std/src/StdStyle.sol": {
      "lastModificationDate": 1707395377206,
      "contentHash": "6281165a12aa639705c691fccefd855e",
      "sourceName": "lib/forge-std/src/StdStyle.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": ["lib/forge-std/src/Vm.sol"],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "StdStyle": {
          "0.8.20": { "path": "StdStyle.sol/StdStyle.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "lib/forge-std/src/StdUtils.sol": {
      "lastModificationDate": 1707395377206,
      "contentHash": "3ce83748fd76644688f916c9cced545b",
      "sourceName": "lib/forge-std/src/StdUtils.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": ["lib/forge-std/src/Vm.sol", "lib/forge-std/src/interfaces/IMulticall3.sol"],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdUtils": {
          "0.8.20": { "path": "StdUtils.sol/StdUtils.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "lib/forge-std/src/Test.sol": {
      "lastModificationDate": 1707395377206,
      "contentHash": "15866901137b5670eabf31362523bd28",
      "sourceName": "lib/forge-std/src/Test.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Test": { "0.8.20": { "path": "Test.sol/Test.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" } }
      },
      "seenByCompiler": true
    },
    "lib/forge-std/src/Vm.sol": {
      "lastModificationDate": 1707395377206,
      "contentHash": "eff2556a384c025f56150fb3f78de858",
      "sourceName": "lib/forge-std/src/Vm.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Vm": { "0.8.20": { "path": "Vm.sol/Vm.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" } },
        "VmSafe": { "0.8.20": { "path": "Vm.sol/VmSafe.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" } }
      },
      "seenByCompiler": true
    },
    "lib/forge-std/src/console.sol": {
      "lastModificationDate": 1707395377206,
      "contentHash": "100b8a33b917da1147740d7ab8b0ded3",
      "sourceName": "lib/forge-std/src/console.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console": { "0.8.20": { "path": "console.sol/console.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" } }
      },
      "seenByCompiler": true
    },
    "lib/forge-std/src/console2.sol": {
      "lastModificationDate": 1707395377206,
      "contentHash": "491ca717c1915995e78cc361485a3067",
      "sourceName": "lib/forge-std/src/console2.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console2": {
          "0.8.20": { "path": "console2.sol/console2.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "lib/forge-std/src/interfaces/IMulticall3.sol": {
      "lastModificationDate": 1707395377210,
      "contentHash": "7b131ca1ca32ef6378b7b9ad5488b901",
      "sourceName": "lib/forge-std/src/interfaces/IMulticall3.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "IMulticall3": {
          "0.8.20": { "path": "IMulticall3.sol/IMulticall3.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "lib/forge-std/src/safeconsole.sol": {
      "lastModificationDate": 1707395377210,
      "contentHash": "ac3b1bf5a444db5db3656021830258a8",
      "sourceName": "lib/forge-std/src/safeconsole.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "safeconsole": {
          "0.8.20": { "path": "safeconsole.sol/safeconsole.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
      "lastModificationDate": 1707395378110,
      "contentHash": "e3a14b0714caaaa82d58fa0bc3756079",
      "sourceName": "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IAccessControl": {
          "0.8.20": { "path": "IAccessControl.sol/IAccessControl.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
      "lastModificationDate": 1707395378110,
      "contentHash": "5a6f0412127636d802db818a7d6ac404",
      "sourceName": "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC1822Proxiable": {
          "0.8.20": {
            "path": "draft-IERC1822.sol/IERC1822Proxiable.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
      "lastModificationDate": 1707395378110,
      "contentHash": "4aefc698f77ecbace7f401257dfe182d",
      "sourceName": "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC1155Errors": {
          "0.8.20": { "path": "draft-IERC6093.sol/IERC1155Errors.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        },
        "IERC20Errors": {
          "0.8.20": { "path": "draft-IERC6093.sol/IERC20Errors.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        },
        "IERC721Errors": {
          "0.8.20": { "path": "draft-IERC6093.sol/IERC721Errors.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
      "lastModificationDate": 1707395378110,
      "contentHash": "3f126cc3806f04f2c7530211ada54b1e",
      "sourceName": "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Clones": { "0.8.20": { "path": "Clones.sol/Clones.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" } }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
      "lastModificationDate": 1707395378110,
      "contentHash": "838bc3ef3bcf0376af7d9b2041989b6a",
      "sourceName": "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ERC1967Utils": {
          "0.8.20": { "path": "ERC1967Utils.sol/ERC1967Utils.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
      "lastModificationDate": 1707395378114,
      "contentHash": "0a5c323fd908535580597848b8e550fb",
      "sourceName": "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IBeacon": { "0.8.20": { "path": "IBeacon.sol/IBeacon.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" } }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
      "lastModificationDate": 1707395378114,
      "contentHash": "b091cae7bc6a906ec5956ad0dcd55ae0",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": ["lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC1155": {
          "0.8.20": { "path": "IERC1155.sol/IERC1155.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
      "lastModificationDate": 1707395378114,
      "contentHash": "d14616defa6d417fafa47e416e3cec73",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": ["lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC1155Receiver": {
          "0.8.20": {
            "path": "IERC1155Receiver.sol/IERC1155Receiver.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
      "lastModificationDate": 1707395378114,
      "contentHash": "96903941ac1966aa14e08bd4ab3c264e",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC1155MetadataURI": {
          "0.8.20": {
            "path": "IERC1155MetadataURI.sol/IERC1155MetadataURI.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
      "lastModificationDate": 1707395378114,
      "contentHash": "79c699f80eb8a9b168cb34e37816f894",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Address": { "0.8.20": { "path": "Address.sol/Address.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" } }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts/contracts/utils/Arrays.sol": {
      "lastModificationDate": 1707395378114,
      "contentHash": "fabe6fe8d403b4f72dec1dc585ab1c7a",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Arrays": { "0.8.20": { "path": "Arrays.sol/Arrays.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" } }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
      "lastModificationDate": 1707395378114,
      "contentHash": "08cbccfefa284405c12b4bfa8c8c9c2b",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "StorageSlot": {
          "0.8.20": { "path": "StorageSlot.sol/StorageSlot.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
      "lastModificationDate": 1707395378114,
      "contentHash": "ba57ff4ddf1d9cae9d2009792795b7f6",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Strings": { "0.8.20": { "path": "Strings.sol/Strings.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" } }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
      "lastModificationDate": 1707395378114,
      "contentHash": "de0163561b417b800d01749cbbe2147e",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC165": { "0.8.20": { "path": "IERC165.sol/IERC165.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" } }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
      "lastModificationDate": 1707395378114,
      "contentHash": "718fa8ba0ff269c92e364c1429d9de57",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Math": { "0.8.20": { "path": "Math.sol/Math.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" } }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
      "lastModificationDate": 1707395378114,
      "contentHash": "b6c6bdc7aaca4fe5b680760a72e09d3e",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "SignedMath": {
          "0.8.20": { "path": "SignedMath.sol/SignedMath.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
      "lastModificationDate": 1707395380886,
      "contentHash": "61a6b098d98b3b945beb7d9de481c025",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "AccessControlUpgradeable": {
          "0.8.20": {
            "path": "AccessControlUpgradeable.sol/AccessControlUpgradeable.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
      "lastModificationDate": 1707395380886,
      "contentHash": "77d30f3cd93f46b80b6f8f1ebc574ee4",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "OwnableUpgradeable": {
          "0.8.20": {
            "path": "OwnableUpgradeable.sol/OwnableUpgradeable.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
      "lastModificationDate": 1707395380886,
      "contentHash": "f0cedd674b4863ee90d1521a92ab82df",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Initializable": {
          "0.8.20": { "path": "Initializable.sol/Initializable.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
      "lastModificationDate": 1707395380886,
      "contentHash": "0488cb927068c0c94b864ea40a34d1ea",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "UUPSUpgradeable": {
          "0.8.20": {
            "path": "UUPSUpgradeable.sol/UUPSUpgradeable.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol": {
      "lastModificationDate": 1707395380886,
      "contentHash": "e61f96afa60dd34d72262e40ff9d03ef",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ERC1155Upgradeable": {
          "0.8.20": {
            "path": "ERC1155Upgradeable.sol/ERC1155Upgradeable.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol": {
      "lastModificationDate": 1707395380886,
      "contentHash": "f165956b00b4de483a90141408402bf8",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ERC1155URIStorageUpgradeable": {
          "0.8.20": {
            "path": "ERC1155URIStorageUpgradeable.sol/ERC1155URIStorageUpgradeable.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol": {
      "lastModificationDate": 1707395380890,
      "contentHash": "3c0b1d199ee353c00e56a0d35860a287",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ERC1155HolderUpgradeable": {
          "0.8.20": {
            "path": "ERC1155HolderUpgradeable.sol/ERC1155HolderUpgradeable.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
      "lastModificationDate": 1707395380890,
      "contentHash": "0c3c7a637fd6a91b3f5eb94fb6e9fc1f",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": ["lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol"],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ContextUpgradeable": {
          "0.8.20": {
            "path": "ContextUpgradeable.sol/ContextUpgradeable.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol": {
      "lastModificationDate": 1707395380890,
      "contentHash": "ef20fd32f5bdcc50bd466abc8fc7f181",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "PausableUpgradeable": {
          "0.8.20": {
            "path": "PausableUpgradeable.sol/PausableUpgradeable.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol": {
      "lastModificationDate": 1707395380890,
      "contentHash": "a5bcbeef155f4b5dfb458e420afbaca6",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": ["lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol"],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ReentrancyGuardUpgradeable": {
          "0.8.20": {
            "path": "ReentrancyGuardUpgradeable.sol/ReentrancyGuardUpgradeable.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
      "lastModificationDate": 1707395380890,
      "contentHash": "ea9d297971734d541e82cc31ec88b84f",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ERC165Upgradeable": {
          "0.8.20": {
            "path": "ERC165Upgradeable.sol/ERC165Upgradeable.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol": {
      "lastModificationDate": 1724135814006,
      "contentHash": "a8c067bd3f1a19e760286558b38cf5b8",
      "sourceName": "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "KlerosBadgeModelController": {
          "0.8.20": {
            "path": "KlerosBadgeModelController.sol/KlerosBadgeModelController.json",
            "build_id": "9ef9d11a39e37f5ed5794780655226e3"
          }
        }
      },
      "seenByCompiler": true
    },
    "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol": {
      "lastModificationDate": 1704882901419,
      "contentHash": "f77808f954f6aee2f4220d3eabe59eae",
      "sourceName": "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/utils/CappedMath.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "KlerosBadgeModelControllerStore": {
          "0.8.20": {
            "path": "KlerosBadgeModelControllerStore.sol/KlerosBadgeModelControllerStore.json",
            "build_id": "9ef9d11a39e37f5ed5794780655226e3"
          }
        }
      },
      "seenByCompiler": true
    },
    "src/contracts/badgeModelControllers/TpBadgeModelController.sol": {
      "lastModificationDate": 1724153388984,
      "contentHash": "68f96c029e263df63fe9529e28f30670",
      "sourceName": "src/contracts/badgeModelControllers/TpBadgeModelController.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelController.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/libraries/LibTpBadgeModelController.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "TpBadgeModelController": {
          "0.8.20": {
            "path": "TpBadgeModelController.sol/TpBadgeModelController.json",
            "build_id": "b1ebc494189e89ea2459b6ec6449b498"
          }
        }
      },
      "seenByCompiler": true
    },
    "src/contracts/badgeModelControllers/TpBadgeModelControllerStore.sol": {
      "lastModificationDate": 1724153388964,
      "contentHash": "65f59a86bbe9ca82af952b26bcbb2665",
      "sourceName": "src/contracts/badgeModelControllers/TpBadgeModelControllerStore.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelController.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/libraries/LibTpBadgeModelController.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "TpBadgeModelControllerStore": {
          "0.8.20": {
            "path": "TpBadgeModelControllerStore.sol/TpBadgeModelControllerStore.json",
            "build_id": "b1ebc494189e89ea2459b6ec6449b498"
          }
        }
      },
      "seenByCompiler": true
    },
    "src/contracts/libraries/LibKlerosBadgeModelController.sol": {
      "lastModificationDate": 1704882901419,
      "contentHash": "1aa8bd137b5324143d9efcc08e6c1ba8",
      "sourceName": "src/contracts/libraries/LibKlerosBadgeModelController.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "LibKlerosBadgeModelController": {
          "0.8.20": {
            "path": "LibKlerosBadgeModelController.sol/LibKlerosBadgeModelController.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "src/contracts/libraries/LibTheBadge.sol": {
      "lastModificationDate": 1704882901419,
      "contentHash": "81ef93b3a3ea9a9cf3a9539d3e583700",
      "sourceName": "src/contracts/libraries/LibTheBadge.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "LibTheBadge": {
          "0.8.20": { "path": "LibTheBadge.sol/LibTheBadge.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "src/contracts/libraries/LibTheBadgeModels.sol": {
      "lastModificationDate": 1704882901419,
      "contentHash": "7e33bbdb356ae5bf0afc59e78eb7a268",
      "sourceName": "src/contracts/libraries/LibTheBadgeModels.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "LibTheBadgeModels": {
          "0.8.20": {
            "path": "LibTheBadgeModels.sol/LibTheBadgeModels.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "src/contracts/libraries/LibTheBadgeStore.sol": {
      "lastModificationDate": 1704882901419,
      "contentHash": "6c16f71fc62a7edc4e72478bcb9464e9",
      "sourceName": "src/contracts/libraries/LibTheBadgeStore.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "LibTheBadgeStore": {
          "0.8.20": {
            "path": "LibTheBadgeStore.sol/LibTheBadgeStore.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "src/contracts/libraries/LibTheBadgeUsers.sol": {
      "lastModificationDate": 1704882901419,
      "contentHash": "25708747bb4e3d41382c59820f44fb2e",
      "sourceName": "src/contracts/libraries/LibTheBadgeUsers.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "LibTheBadgeUsers": {
          "0.8.20": {
            "path": "LibTheBadgeUsers.sol/LibTheBadgeUsers.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "src/contracts/libraries/LibTpBadgeModelController.sol": {
      "lastModificationDate": 1704882901419,
      "contentHash": "c860fe72d825396742291c23c191dedd",
      "sourceName": "src/contracts/libraries/LibTpBadgeModelController.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "LibTpBadgeModelController": {
          "0.8.20": {
            "path": "LibTpBadgeModelController.sol/LibTpBadgeModelController.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "src/contracts/tcr/LightGTCRFactory.sol": {
      "lastModificationDate": 1724091271701,
      "contentHash": "072543e160d2f1f138539ca6569988aa",
      "sourceName": "src/contracts/tcr/LightGTCRFactory.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/erc-792/contracts/erc-1497/IEvidence.sol",
        "src/contracts/tcr/LightGeneralizedTCR.sol",
        "src/utils/CappedMath.sol",
        "src/utils/CappedMath128.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "LightGTCRFactory": {
          "0.8.20": {
            "path": "LightGTCRFactory.sol/LightGTCRFactory.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "src/contracts/tcr/LightGeneralizedTCR.sol": {
      "lastModificationDate": 1724091271702,
      "contentHash": "b238061e9ffddbcb493fc116a1ce73e0",
      "sourceName": "src/contracts/tcr/LightGeneralizedTCR.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/erc-792/contracts/erc-1497/IEvidence.sol",
        "src/utils/CappedMath.sol",
        "src/utils/CappedMath128.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "LightGeneralizedTCR": {
          "0.8.20": {
            "path": "LightGeneralizedTCR.sol/LightGeneralizedTCR.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "src/contracts/thebadge/TheBadge.sol": {
      "lastModificationDate": 1724150483589,
      "contentHash": "999fb2eefb2ad7eee62e312df4f2c09c",
      "sourceName": "src/contracts/thebadge/TheBadge.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeUsers.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "TheBadge": {
          "0.8.20": { "path": "TheBadge.sol/TheBadge.json", "build_id": "9ef9d11a39e37f5ed5794780655226e3" }
        }
      },
      "seenByCompiler": true
    },
    "src/contracts/thebadge/TheBadgeModels.sol": {
      "lastModificationDate": 1724094557281,
      "contentHash": "1b7dc0a6d1cb206c538a8ee598e9aa8b",
      "sourceName": "src/contracts/thebadge/TheBadgeModels.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "TheBadgeModels": {
          "0.8.20": { "path": "TheBadgeModels.sol/TheBadgeModels.json", "build_id": "9ef9d11a39e37f5ed5794780655226e3" }
        }
      },
      "seenByCompiler": true
    },
    "src/contracts/thebadge/TheBadgeRoles.sol": {
      "lastModificationDate": 1724150483567,
      "contentHash": "6c56c304872657027a7936d306141010",
      "sourceName": "src/contracts/thebadge/TheBadgeRoles.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "TheBadgeRoles": {
          "0.8.20": { "path": "TheBadgeRoles.sol/TheBadgeRoles.json", "build_id": "9ef9d11a39e37f5ed5794780655226e3" }
        }
      },
      "seenByCompiler": true
    },
    "src/contracts/thebadge/TheBadgeStore.sol": {
      "lastModificationDate": 1704882901419,
      "contentHash": "d955eb2dbbd9d276f7fda9c454c6ccda",
      "sourceName": "src/contracts/thebadge/TheBadgeStore.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "TheBadgeStore": {
          "0.8.20": { "path": "TheBadgeStore.sol/TheBadgeStore.json", "build_id": "9ef9d11a39e37f5ed5794780655226e3" }
        }
      },
      "seenByCompiler": true
    },
    "src/contracts/thebadge/TheBadgeUsers.sol": {
      "lastModificationDate": 1717765723494,
      "contentHash": "af8a6fb892f0774fec7e044db11578c3",
      "sourceName": "src/contracts/thebadge/TheBadgeUsers.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ITheBadgeUsers.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "TheBadgeUsers": {
          "0.8.20": { "path": "TheBadgeUsers.sol/TheBadgeUsers.json", "build_id": "9ef9d11a39e37f5ed5794780655226e3" }
        }
      },
      "seenByCompiler": true
    },
    "src/contracts/thebadge/TheBadgeUsersStore.sol": {
      "lastModificationDate": 1704882901419,
      "contentHash": "9415b5fc36ebab89156da49dba6a4d7e",
      "sourceName": "src/contracts/thebadge/TheBadgeUsersStore.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "TheBadgeUsersStore": {
          "0.8.20": {
            "path": "TheBadgeUsersStore.sol/TheBadgeUsersStore.json",
            "build_id": "9ef9d11a39e37f5ed5794780655226e3"
          }
        }
      },
      "seenByCompiler": true
    },
    "src/interfaces/IBadgeModelController.sol": {
      "lastModificationDate": 1724136302448,
      "contentHash": "e4b26fbc567c743eaf0fd890fc397fd9",
      "sourceName": "src/interfaces/IBadgeModelController.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IBadgeModelController": {
          "0.8.20": {
            "path": "IBadgeModelController.sol/IBadgeModelController.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "src/interfaces/ILightGTCRFactory.sol": {
      "lastModificationDate": 1704882901419,
      "contentHash": "2ca11d8873c5be5bee85b099c6b2ec21",
      "sourceName": "src/interfaces/ILightGTCRFactory.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "src/interfaces/ILightGeneralizedTCR.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ILightGTCRFactory": {
          "0.8.20": {
            "path": "ILightGTCRFactory.sol/ILightGTCRFactory.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "src/interfaces/ILightGeneralizedTCR.sol": {
      "lastModificationDate": 1704882901419,
      "contentHash": "aad7f9ca1d2b248cb7deadb4d29ba407",
      "sourceName": "src/interfaces/ILightGeneralizedTCR.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": ["lib/erc-792/contracts/IArbitrable.sol", "lib/erc-792/contracts/IArbitrator.sol"],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ILightGeneralizedTCR": {
          "0.8.20": {
            "path": "ILightGeneralizedTCR.sol/ILightGeneralizedTCR.json",
            "build_id": "18ece5be1dd93edd010307bf3eeac08b"
          }
        }
      },
      "seenByCompiler": true
    },
    "src/interfaces/ITheBadge.sol": {
      "lastModificationDate": 1724137020317,
      "contentHash": "803597ca5b64da681820f07efe4cc449",
      "sourceName": "src/interfaces/ITheBadge.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ITheBadge": {
          "0.8.20": { "path": "ITheBadge.sol/ITheBadge.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "src/interfaces/ITheBadgeModels.sol": {
      "lastModificationDate": 1704882901419,
      "contentHash": "2a2f051f55e18654dff9243de2473cd4",
      "sourceName": "src/interfaces/ITheBadgeModels.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ITheBadgeModels": {
          "0.8.20": {
            "path": "ITheBadgeModels.sol/ITheBadgeModels.json",
            "build_id": "9ef9d11a39e37f5ed5794780655226e3"
          }
        }
      },
      "seenByCompiler": true
    },
    "src/interfaces/ITheBadgeUsers.sol": {
      "lastModificationDate": 1704882901419,
      "contentHash": "77b21e0ee369da39f69bc12c7a889ea4",
      "sourceName": "src/interfaces/ITheBadgeUsers.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ITheBadgeUsers": {
          "0.8.20": { "path": "ITheBadgeUsers.sol/ITheBadgeUsers.json", "build_id": "9ef9d11a39e37f5ed5794780655226e3" }
        }
      },
      "seenByCompiler": true
    },
    "src/utils/CappedMath.sol": {
      "lastModificationDate": 1704882901419,
      "contentHash": "da8d4d140da970721cb131050a3f24ba",
      "sourceName": "src/utils/CappedMath.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "CappedMath": {
          "0.8.20": { "path": "CappedMath.sol/CappedMath.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "src/utils/CappedMath128.sol": {
      "lastModificationDate": 1724091271702,
      "contentHash": "82ad1ff0c56fb21631e70047867aa38c",
      "sourceName": "src/utils/CappedMath128.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "CappedMath128": {
          "0.8.20": { "path": "CappedMath128.sol/CappedMath128.json", "build_id": "18ece5be1dd93edd010307bf3eeac08b" }
        }
      },
      "seenByCompiler": true
    },
    "test/BadgeModelControllers/KlerosBadgeModelController/Config.sol": {
      "lastModificationDate": 1724099024453,
      "contentHash": "004db4648e376470bc27de3cdb7171cf",
      "sourceName": "test/BadgeModelControllers/KlerosBadgeModelController/Config.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Config": {
          "0.8.20": {
            "path": "KlerosBadgeModelController/Config.sol/Config.json",
            "build_id": "9ef9d11a39e37f5ed5794780655226e3"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/BadgeModelControllers/KlerosBadgeModelController/CreateBadgeModel.sol": {
      "lastModificationDate": 1724106303699,
      "contentHash": "c9c1538dc3f1adf3b10c6b75ed737a3c",
      "sourceName": "test/BadgeModelControllers/KlerosBadgeModelController/CreateBadgeModel.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol",
        "test/BadgeModelControllers/KlerosBadgeModelController/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "CreateBadgeModel": {
          "0.8.20": {
            "path": "CreateBadgeModel.sol/CreateBadgeModel.json",
            "build_id": "9ef9d11a39e37f5ed5794780655226e3"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/BadgeModelControllers/TpBadgeModelController/Config.sol": {
      "lastModificationDate": 1724099024438,
      "contentHash": "6aa03fb9a4637bc9463baa996e10d630",
      "sourceName": "test/BadgeModelControllers/TpBadgeModelController/Config.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelController.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/libraries/LibTpBadgeModelController.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Config": {
          "0.8.20": {
            "path": "TpBadgeModelController/Config.sol/Config.json",
            "build_id": "b1ebc494189e89ea2459b6ec6449b498"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/BadgeModelControllers/TpBadgeModelController/CreateBadgeModel.sol": {
      "lastModificationDate": 1724106303699,
      "contentHash": "ea26439295349094acb07677ced2d762",
      "sourceName": "test/BadgeModelControllers/TpBadgeModelController/CreateBadgeModel.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelController.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/libraries/LibTpBadgeModelController.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol",
        "test/BadgeModelControllers/TpBadgeModelController/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "CreateBadgeModel": {
          "0.8.20": {
            "path": "TpBadgeModelController/CreateBadgeModel.sol/CreateBadgeModel.json",
            "build_id": "b1ebc494189e89ea2459b6ec6449b498"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadge/Config.sol": {
      "lastModificationDate": 1724155732458,
      "contentHash": "329b06a131833c7da8a9af5fe487af3e",
      "sourceName": "test/TheBadge/Config.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelController.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/libraries/LibTpBadgeModelController.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Config": { "0.8.20": { "path": "Config.sol/Config.json", "build_id": "141f3e5f8dfd1d41bb723071c1d20369" } }
      },
      "seenByCompiler": true
    },
    "test/TheBadge/Mint.t.sol": {
      "lastModificationDate": 1724138273847,
      "contentHash": "28cd881a929075036561cfded0c232ef",
      "sourceName": "test/TheBadge/Mint.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelController.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/libraries/LibTpBadgeModelController.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol",
        "test/TheBadge/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Mint": { "0.8.20": { "path": "Mint.t.sol/Mint.json", "build_id": "141f3e5f8dfd1d41bb723071c1d20369" } }
      },
      "seenByCompiler": true
    },
    "test/TheBadge/MintOnBehalf.t.sol": {
      "lastModificationDate": 1724156153525,
      "contentHash": "540bd37f590cba729ce88a8cf750e0cd",
      "sourceName": "test/TheBadge/MintOnBehalf.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelController.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/libraries/LibTpBadgeModelController.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol",
        "test/TheBadge/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Mint": { "0.8.20": { "path": "MintOnBehalf.t.sol/Mint.json", "build_id": "aec078970a9bb3ff54e3e87e53effc52" } }
      },
      "seenByCompiler": true
    },
    "test/TheBadge/MintValue.t.sol": {
      "lastModificationDate": 1724139602728,
      "contentHash": "972afe59b32b50f487b233b5011141e5",
      "sourceName": "test/TheBadge/MintValue.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelController.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/libraries/LibTpBadgeModelController.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol",
        "test/TheBadge/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "MintValue": {
          "0.8.20": { "path": "MintValue.t.sol/MintValue.json", "build_id": "141f3e5f8dfd1d41bb723071c1d20369" }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeModels/AddBadgeModelController.t.sol": {
      "lastModificationDate": 1724106303700,
      "contentHash": "7117bb3c91dcc3e28578edc6d97ed82f",
      "sourceName": "test/TheBadgeModels/AddBadgeModelController.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelController.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/libraries/LibTpBadgeModelController.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol",
        "test/TheBadgeModels/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "AddBadgeModelController": {
          "0.8.20": {
            "path": "AddBadgeModelController.t.sol/AddBadgeModelController.json",
            "build_id": "b1ebc494189e89ea2459b6ec6449b498"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeModels/Config.sol": {
      "lastModificationDate": 1724099024446,
      "contentHash": "33d294562e21643f81d0873e5622809a",
      "sourceName": "test/TheBadgeModels/Config.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelController.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/libraries/LibTpBadgeModelController.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Config": {
          "0.8.20": { "path": "TheBadgeModels/Config.sol/Config.json", "build_id": "b1ebc494189e89ea2459b6ec6449b498" }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeModels/CreateBadgeModel.t.sol": {
      "lastModificationDate": 1724106303700,
      "contentHash": "0ca28f9ea6ad26edddc4161095696168",
      "sourceName": "test/TheBadgeModels/CreateBadgeModel.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelController.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/libraries/LibTpBadgeModelController.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol",
        "test/TheBadgeModels/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "CreateBadgeModel": {
          "0.8.20": {
            "path": "CreateBadgeModel.t.sol/CreateBadgeModel.json",
            "build_id": "b1ebc494189e89ea2459b6ec6449b498"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeModels/IsBadgeModelSuspended.t.sol": {
      "lastModificationDate": 1724106303700,
      "contentHash": "f9c6dd75a2400112cc9722978ae82c2e",
      "sourceName": "test/TheBadgeModels/IsBadgeModelSuspended.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelController.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/libraries/LibTpBadgeModelController.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol",
        "test/TheBadgeModels/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IsBadgeModelSuspended": {
          "0.8.20": {
            "path": "IsBadgeModelSuspended.t.sol/IsBadgeModelSuspended.json",
            "build_id": "b1ebc494189e89ea2459b6ec6449b498"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeModels/SuspendBadgeModel.t.sol": {
      "lastModificationDate": 1724106303700,
      "contentHash": "29a2b13d2c51ceb85b7edfb6d909605d",
      "sourceName": "test/TheBadgeModels/SuspendBadgeModel.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelController.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/libraries/LibTpBadgeModelController.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol",
        "test/TheBadgeModels/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "SuspendBadgeModel": {
          "0.8.20": {
            "path": "SuspendBadgeModel.t.sol/SuspendBadgeModel.json",
            "build_id": "b1ebc494189e89ea2459b6ec6449b498"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeModels/UpdateBadgeModel.t.sol": {
      "lastModificationDate": 1724106303700,
      "contentHash": "ad72ea53ba154c4f2cee92cb6ee51a7c",
      "sourceName": "test/TheBadgeModels/UpdateBadgeModel.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelController.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/libraries/LibTpBadgeModelController.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol",
        "test/TheBadgeModels/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "UpdateBadgeModel": {
          "0.8.20": {
            "path": "UpdateBadgeModel.t.sol/UpdateBadgeModel.json",
            "build_id": "b1ebc494189e89ea2459b6ec6449b498"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeModels/UpdateBadgeModelController.t.sol": {
      "lastModificationDate": 1724106303700,
      "contentHash": "f65d84886deb36aab00ca440fa836e0e",
      "sourceName": "test/TheBadgeModels/UpdateBadgeModelController.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelController.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/libraries/LibTpBadgeModelController.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol",
        "test/TheBadgeModels/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "UpdateBadgeModelController": {
          "0.8.20": {
            "path": "UpdateBadgeModelController.t.sol/UpdateBadgeModelController.json",
            "build_id": "b1ebc494189e89ea2459b6ec6449b498"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeModels/UpdateBadgeModelMetadata.t.sol": {
      "lastModificationDate": 1724106303700,
      "contentHash": "437cb76d70d8b25ffbc95bfcfec7a40f",
      "sourceName": "test/TheBadgeModels/UpdateBadgeModelMetadata.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelController.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/libraries/LibTpBadgeModelController.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol",
        "test/TheBadgeModels/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "UpdateBadgeModelMetadata": {
          "0.8.20": {
            "path": "UpdateBadgeModelMetadata.t.sol/UpdateBadgeModelMetadata.json",
            "build_id": "b1ebc494189e89ea2459b6ec6449b498"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeModels/UpdateBadgeModelProtocolFee.t.sol": {
      "lastModificationDate": 1724106303700,
      "contentHash": "5fc2712f90e4fb095d44580cb7891167",
      "sourceName": "test/TheBadgeModels/UpdateBadgeModelProtocolFee.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelController.sol",
        "src/contracts/badgeModelControllers/TpBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/libraries/LibTpBadgeModelController.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol",
        "test/TheBadgeModels/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "UpdateBadgeModelProtocolFee": {
          "0.8.20": {
            "path": "UpdateBadgeModelProtocolFee.t.sol/UpdateBadgeModelProtocolFee.json",
            "build_id": "b1ebc494189e89ea2459b6ec6449b498"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeStore/AddBadge.t.sol": {
      "lastModificationDate": 1724106303700,
      "contentHash": "3bb83813caf0bfbec9101ad68a5e3848",
      "sourceName": "test/TheBadgeStore/AddBadge.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "test/TheBadgeStore/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "AddBadge": {
          "0.8.20": { "path": "AddBadge.t.sol/AddBadge.json", "build_id": "9ef9d11a39e37f5ed5794780655226e3" }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeStore/AddBadgeModel.t.sol": {
      "lastModificationDate": 1724106303700,
      "contentHash": "3195f49c350aa6b7fb805366628120f8",
      "sourceName": "test/TheBadgeStore/AddBadgeModel.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "test/TheBadgeStore/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "AddBadgeModel": {
          "0.8.20": { "path": "AddBadgeModel.t.sol/AddBadgeModel.json", "build_id": "9ef9d11a39e37f5ed5794780655226e3" }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeStore/AddBadgeModelController.t.sol": {
      "lastModificationDate": 1724106303700,
      "contentHash": "80e3d9783f8784e9061bf7ed9eeec787",
      "sourceName": "test/TheBadgeStore/AddBadgeModelController.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "test/TheBadgeStore/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "AddBadgeModelController": {
          "0.8.20": {
            "path": "TheBadgeStore/AddBadgeModelController.t.sol/AddBadgeModelController.json",
            "build_id": "9ef9d11a39e37f5ed5794780655226e3"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeStore/AddPermittedContract.t.sol": {
      "lastModificationDate": 1724106303700,
      "contentHash": "effa47bddcd0e82139c616368367af95",
      "sourceName": "test/TheBadgeStore/AddPermittedContract.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "test/TheBadgeStore/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "AddPermittedContract": {
          "0.8.20": {
            "path": "AddPermittedContract.t.sol/AddPermittedContract.json",
            "build_id": "9ef9d11a39e37f5ed5794780655226e3"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeStore/Config.sol": {
      "lastModificationDate": 1704882901423,
      "contentHash": "9b871efda5565cc3b4431450644a875f",
      "sourceName": "test/TheBadgeStore/Config.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Config": {
          "0.8.20": { "path": "TheBadgeStore/Config.sol/Config.json", "build_id": "9ef9d11a39e37f5ed5794780655226e3" }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeStore/CreateUser.t.sol": {
      "lastModificationDate": 1724106303700,
      "contentHash": "ef5fa4b1cf56f94a8fd48f7b5384fb49",
      "sourceName": "test/TheBadgeStore/CreateUser.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "test/TheBadgeStore/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "CreateUser": {
          "0.8.20": { "path": "CreateUser.t.sol/CreateUser.json", "build_id": "9ef9d11a39e37f5ed5794780655226e3" }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeStore/RemovePermittedContract.t.sol": {
      "lastModificationDate": 1724106303700,
      "contentHash": "d14ab8910d4a7df6adbc2b31adcab4b3",
      "sourceName": "test/TheBadgeStore/RemovePermittedContract.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "test/TheBadgeStore/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "RemovePermittedContract": {
          "0.8.20": {
            "path": "RemovePermittedContract.t.sol/RemovePermittedContract.json",
            "build_id": "9ef9d11a39e37f5ed5794780655226e3"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeStore/TransferBadge.t.sol": {
      "lastModificationDate": 1724106303701,
      "contentHash": "4243b720839778e5aeeda6120c7c7914",
      "sourceName": "test/TheBadgeStore/TransferBadge.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "test/TheBadgeStore/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "TransferBadge": {
          "0.8.20": { "path": "TransferBadge.t.sol/TransferBadge.json", "build_id": "9ef9d11a39e37f5ed5794780655226e3" }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeStore/UpdateBadgeModel.t.sol": {
      "lastModificationDate": 1724106303701,
      "contentHash": "30238ceb66b3fa825eeeb54acda2e944",
      "sourceName": "test/TheBadgeStore/UpdateBadgeModel.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "test/TheBadgeStore/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "UpdateBadgeModel": {
          "0.8.20": {
            "path": "TheBadgeStore/UpdateBadgeModel.t.sol/UpdateBadgeModel.json",
            "build_id": "9ef9d11a39e37f5ed5794780655226e3"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeStore/UpdateBadgeModelController.t.sol": {
      "lastModificationDate": 1724106303701,
      "contentHash": "660a22aaf4694c9482facaa2850f0644",
      "sourceName": "test/TheBadgeStore/UpdateBadgeModelController.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "test/TheBadgeStore/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "UpdateBadgeModelController": {
          "0.8.20": {
            "path": "TheBadgeStore/UpdateBadgeModelController.t.sol/UpdateBadgeModelController.json",
            "build_id": "9ef9d11a39e37f5ed5794780655226e3"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeStore/UpdateCreateBadgeModelProtocolFee.t.sol": {
      "lastModificationDate": 1724106303701,
      "contentHash": "86a57ab515dc119c1f56a0fdb54d05f0",
      "sourceName": "test/TheBadgeStore/UpdateCreateBadgeModelProtocolFee.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "test/TheBadgeStore/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "UpdateCreateBadgeModelProtocolFee": {
          "0.8.20": {
            "path": "UpdateCreateBadgeModelProtocolFee.t.sol/UpdateCreateBadgeModelProtocolFee.json",
            "build_id": "9ef9d11a39e37f5ed5794780655226e3"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeStore/UpdateMintBadgeDefaultProtocolFee.t.sol": {
      "lastModificationDate": 1724106303701,
      "contentHash": "3c761822e421dbc3b90d8e602a9e75b1",
      "sourceName": "test/TheBadgeStore/UpdateMintBadgeDefaultProtocolFee.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "test/TheBadgeStore/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "UpdateMintBadgeDefaultProtocolFee": {
          "0.8.20": {
            "path": "UpdateMintBadgeDefaultProtocolFee.t.sol/UpdateMintBadgeDefaultProtocolFee.json",
            "build_id": "9ef9d11a39e37f5ed5794780655226e3"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeStore/UpdatePermittedContract.t.sol": {
      "lastModificationDate": 1724106303701,
      "contentHash": "efecab860c03426302fb22cbb8cb147c",
      "sourceName": "test/TheBadgeStore/UpdatePermittedContract.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "test/TheBadgeStore/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "UpdatePermittedContract": {
          "0.8.20": {
            "path": "UpdatePermittedContract.t.sol/UpdatePermittedContract.json",
            "build_id": "9ef9d11a39e37f5ed5794780655226e3"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeStore/UpdateRegisterCreatorProtocolFee.t.sol": {
      "lastModificationDate": 1724106303701,
      "contentHash": "49a59caa88e68fd8b1806c6911f724f7",
      "sourceName": "test/TheBadgeStore/UpdateRegisterCreatorProtocolFee.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "test/TheBadgeStore/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "UpdateRegisterCreatorProtocolFee": {
          "0.8.20": {
            "path": "UpdateRegisterCreatorProtocolFee.t.sol/UpdateRegisterCreatorProtocolFee.json",
            "build_id": "9ef9d11a39e37f5ed5794780655226e3"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeStore/UpdateUser.t.sol": {
      "lastModificationDate": 1724106303701,
      "contentHash": "d0eb7129769f2f6c4c2467b62e3fb0eb",
      "sourceName": "test/TheBadgeStore/UpdateUser.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "test/TheBadgeStore/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "UpdateUser": {
          "0.8.20": { "path": "UpdateUser.t.sol/UpdateUser.json", "build_id": "9ef9d11a39e37f5ed5794780655226e3" }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeUsers/Config.sol": {
      "lastModificationDate": 1724138238360,
      "contentHash": "bb71798414df3feab2a83b5d97e94f1a",
      "sourceName": "test/TheBadgeUsers/Config.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Config": {
          "0.8.20": { "path": "TheBadgeUsers/Config.sol/Config.json", "build_id": "9ef9d11a39e37f5ed5794780655226e3" }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeUsers/ExecuteUserVerification.t.sol": {
      "lastModificationDate": 1724106303701,
      "contentHash": "daa988fc665acc085f500e7c2446f9ee",
      "sourceName": "test/TheBadgeUsers/ExecuteUserVerification.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol",
        "test/TheBadgeUsers/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ExecuteUserVerification": {
          "0.8.20": {
            "path": "ExecuteUserVerification.t.sol/ExecuteUserVerification.json",
            "build_id": "9ef9d11a39e37f5ed5794780655226e3"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeUsers/MakeUserCreator.t.sol": {
      "lastModificationDate": 1724106303701,
      "contentHash": "5ef1ceaac6aa0028f96fb83ac856be0a",
      "sourceName": "test/TheBadgeUsers/MakeUserCreator.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol",
        "test/TheBadgeUsers/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "MakeUserCreator": {
          "0.8.20": {
            "path": "MakeUserCreator.t.sol/MakeUserCreator.json",
            "build_id": "9ef9d11a39e37f5ed5794780655226e3"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeUsers/RegisterUser.t.sol": {
      "lastModificationDate": 1724106303702,
      "contentHash": "aec2973c81f8f67c8b89c600e5edf189",
      "sourceName": "test/TheBadgeUsers/RegisterUser.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol",
        "test/TheBadgeUsers/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "RegisterUser": {
          "0.8.20": { "path": "RegisterUser.t.sol/RegisterUser.json", "build_id": "9ef9d11a39e37f5ed5794780655226e3" }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeUsers/SubmitUserVerification.t.sol": {
      "lastModificationDate": 1724106303702,
      "contentHash": "a8952b5989c93967f32724feb7cb3d1a",
      "sourceName": "test/TheBadgeUsers/SubmitUserVerification.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol",
        "test/TheBadgeUsers/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "SubmitUserVerification": {
          "0.8.20": {
            "path": "SubmitUserVerification.t.sol/SubmitUserVerification.json",
            "build_id": "9ef9d11a39e37f5ed5794780655226e3"
          }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeUsers/SuspendUser.t.sol": {
      "lastModificationDate": 1724106303702,
      "contentHash": "9046f737596f82382900a4440dfbd62b",
      "sourceName": "test/TheBadgeUsers/SuspendUser.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol",
        "test/TheBadgeUsers/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "SuspendUser": {
          "0.8.20": { "path": "SuspendUser.t.sol/SuspendUser.json", "build_id": "9ef9d11a39e37f5ed5794780655226e3" }
        }
      },
      "seenByCompiler": true
    },
    "test/TheBadgeUsers/UpdateUser.t.sol": {
      "lastModificationDate": 1724106303702,
      "contentHash": "99e4b02911d1f1d6e98b52b00a1d9f97",
      "sourceName": "test/TheBadgeUsers/UpdateUser.t.sol",
      "compilerSettings": {
        "solc": {
          "optimizer": { "enabled": true, "runs": 100 },
          "metadata": { "useLiteralContent": false, "bytecodeHash": "ipfs", "appendCBOR": true },
          "outputSelection": {
            "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata"] }
          },
          "evmVersion": "paris",
          "viaIR": true,
          "libraries": {}
        },
        "vyper": {
          "evmVersion": "paris",
          "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode"] } }
        }
      },
      "imports": [
        "lib/erc-792/contracts/IArbitrable.sol",
        "lib/erc-792/contracts/IArbitrator.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelController.sol",
        "src/contracts/badgeModelControllers/KlerosBadgeModelControllerStore.sol",
        "src/contracts/libraries/LibKlerosBadgeModelController.sol",
        "src/contracts/libraries/LibTheBadge.sol",
        "src/contracts/libraries/LibTheBadgeModels.sol",
        "src/contracts/libraries/LibTheBadgeStore.sol",
        "src/contracts/libraries/LibTheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadge.sol",
        "src/contracts/thebadge/TheBadgeModels.sol",
        "src/contracts/thebadge/TheBadgeRoles.sol",
        "src/contracts/thebadge/TheBadgeStore.sol",
        "src/contracts/thebadge/TheBadgeUsers.sol",
        "src/contracts/thebadge/TheBadgeUsersStore.sol",
        "src/interfaces/IBadgeModelController.sol",
        "src/interfaces/ILightGTCRFactory.sol",
        "src/interfaces/ILightGeneralizedTCR.sol",
        "src/interfaces/ITheBadge.sol",
        "src/interfaces/ITheBadgeModels.sol",
        "src/interfaces/ITheBadgeUsers.sol",
        "src/utils/CappedMath.sol",
        "test/TheBadgeUsers/Config.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "UpdateUser": {
          "0.8.20": {
            "path": "TheBadgeUsers/UpdateUser.t.sol/UpdateUser.json",
            "build_id": "9ef9d11a39e37f5ed5794780655226e3"
          }
        }
      },
      "seenByCompiler": true
    }
  },
  "builds": [
    "141f3e5f8dfd1d41bb723071c1d20369",
    "18ece5be1dd93edd010307bf3eeac08b",
    "9ef9d11a39e37f5ed5794780655226e3",
    "aec078970a9bb3ff54e3e87e53effc52",
    "b1ebc494189e89ea2459b6ec6449b498"
  ]
}
