/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ITheBadge,
  ITheBadgeInterface,
} from "../../../src/interfaces/ITheBadge";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_badgeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "badge",
    outputs: [
      {
        components: [
          {
            internalType: "enum BadgeStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "dueDate",
            type: "uint256",
          },
        ],
        internalType: "struct ITheBadge.Badge",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "badgeOwner",
        type: "address",
      },
      {
        internalType: "enum BadgeStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "updateBadgeStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ITheBadge__factory {
  static readonly abi = _abi;
  static createInterface(): ITheBadgeInterface {
    return new utils.Interface(_abi) as ITheBadgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITheBadge {
    return new Contract(address, _abi, signerOrProvider) as ITheBadge;
  }
}
